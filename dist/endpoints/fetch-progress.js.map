{"version":3,"sources":["../../src/endpoints/fetch-progress.ts"],"sourcesContent":["import { addDataAndFileToRequest, CollectionSlug, type Endpoint, type DefaultDocumentIDType } from 'payload'\nimport type { CourseProgress } from '../providers/types.js'\n\ntype Args = {\n  userSlug: string\n}\n\ntype FetchProgressHandler = (args: Args) => Endpoint['handler']\n\nexport const fetchProgressHandler: FetchProgressHandler = ({ userSlug = 'users' }) => async (req) => {\n  await addDataAndFileToRequest(req)\n  const user = req.user\n  const payload = req.payload\n\n  if (!user) {\n    return Response.json(\n      { message: 'You must be logged in to fetch progress.' },\n      { status: 401 },\n    )\n  }\n\n  try {\n    const currentUser = await payload.findByID({\n      collection: userSlug as CollectionSlug,\n      id: user.id,\n      depth: 1,\n    })\n\n    if (!currentUser) {\n      return Response.json({ message: 'User not found.' }, { status: 404 })\n    }\n\n    const coursesProgress = currentUser.coursesProgress || []\n    const enrolledCourses = currentUser.enrolledCourses || []\n    const completedCourses = currentUser.completedCourses || []\n\n    // Normalize progress data to use IDs only\n    const normalizedProgress = coursesProgress.map((progress: CourseProgress) => ({\n      ...progress,\n      course: typeof progress.course === 'object' && progress.course !== null ? progress.course.id : progress.course,\n      completedLessons: progress.completedLessons?.map((lesson) => ({\n        ...lesson,\n        lesson: typeof lesson.lesson === 'object' && lesson.lesson !== null ? lesson.lesson.id : lesson.lesson,\n      })) || [],\n      completedQuizzes: progress.completedQuizzes?.map((quiz) => ({\n        ...quiz,\n        quiz: typeof quiz.quiz === 'object' && quiz.quiz !== null ? quiz.quiz.id : quiz.quiz,\n      })) || [],\n    }))\n\n    // Normalize enrolled and completed courses to use IDs only\n    const enrolledCoursesArray = Array.isArray(enrolledCourses) ? enrolledCourses : []\n    const completedCoursesArray = Array.isArray(completedCourses) ? completedCourses : []\n    \n    const normalizedEnrolledCourses = enrolledCoursesArray.map((course: DefaultDocumentIDType | { id: DefaultDocumentIDType }) => \n      typeof course === 'object' && course !== null ? course.id : course\n    )\n    const normalizedCompletedCourses = completedCoursesArray.map((course: DefaultDocumentIDType | { id: DefaultDocumentIDType }) => \n      typeof course === 'object' && course !== null ? course.id : course\n    )\n\n    payload.logger.info(`Fetched progress for user ${user.id}`)\n\n    return Response.json({\n      coursesProgress: normalizedProgress,\n      enrolledCourses: normalizedEnrolledCourses,\n      completedCourses: normalizedCompletedCourses,\n    })\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'An unknown error occurred.'\n    payload.logger.error(message)\n    return Response.json({ message }, { status: 500 })\n  }\n}\n"],"names":["addDataAndFileToRequest","fetchProgressHandler","userSlug","req","user","payload","Response","json","message","status","currentUser","findByID","collection","id","depth","coursesProgress","enrolledCourses","completedCourses","normalizedProgress","map","progress","course","completedLessons","lesson","completedQuizzes","quiz","enrolledCoursesArray","Array","isArray","completedCoursesArray","normalizedEnrolledCourses","normalizedCompletedCourses","logger","info","error","Error"],"mappings":"AAAA,SAASA,uBAAuB,QAAmE,UAAS;AAS5G,OAAO,MAAMC,uBAA6C,CAAC,EAAEC,WAAW,OAAO,EAAE,GAAK,OAAOC;QAC3F,MAAMH,wBAAwBG;QAC9B,MAAMC,OAAOD,IAAIC,IAAI;QACrB,MAAMC,UAAUF,IAAIE,OAAO;QAE3B,IAAI,CAACD,MAAM;YACT,OAAOE,SAASC,IAAI,CAClB;gBAAEC,SAAS;YAA2C,GACtD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,IAAI;YACF,MAAMC,cAAc,MAAML,QAAQM,QAAQ,CAAC;gBACzCC,YAAYV;gBACZW,IAAIT,KAAKS,EAAE;gBACXC,OAAO;YACT;YAEA,IAAI,CAACJ,aAAa;gBAChB,OAAOJ,SAASC,IAAI,CAAC;oBAAEC,SAAS;gBAAkB,GAAG;oBAAEC,QAAQ;gBAAI;YACrE;YAEA,MAAMM,kBAAkBL,YAAYK,eAAe,IAAI,EAAE;YACzD,MAAMC,kBAAkBN,YAAYM,eAAe,IAAI,EAAE;YACzD,MAAMC,mBAAmBP,YAAYO,gBAAgB,IAAI,EAAE;YAE3D,0CAA0C;YAC1C,MAAMC,qBAAqBH,gBAAgBI,GAAG,CAAC,CAACC,WAA8B,CAAA;oBAC5E,GAAGA,QAAQ;oBACXC,QAAQ,OAAOD,SAASC,MAAM,KAAK,YAAYD,SAASC,MAAM,KAAK,OAAOD,SAASC,MAAM,CAACR,EAAE,GAAGO,SAASC,MAAM;oBAC9GC,kBAAkBF,SAASE,gBAAgB,EAAEH,IAAI,CAACI,SAAY,CAAA;4BAC5D,GAAGA,MAAM;4BACTA,QAAQ,OAAOA,OAAOA,MAAM,KAAK,YAAYA,OAAOA,MAAM,KAAK,OAAOA,OAAOA,MAAM,CAACV,EAAE,GAAGU,OAAOA,MAAM;wBACxG,CAAA,MAAO,EAAE;oBACTC,kBAAkBJ,SAASI,gBAAgB,EAAEL,IAAI,CAACM,OAAU,CAAA;4BAC1D,GAAGA,IAAI;4BACPA,MAAM,OAAOA,KAAKA,IAAI,KAAK,YAAYA,KAAKA,IAAI,KAAK,OAAOA,KAAKA,IAAI,CAACZ,EAAE,GAAGY,KAAKA,IAAI;wBACtF,CAAA,MAAO,EAAE;gBACX,CAAA;YAEA,2DAA2D;YAC3D,MAAMC,uBAAuBC,MAAMC,OAAO,CAACZ,mBAAmBA,kBAAkB,EAAE;YAClF,MAAMa,wBAAwBF,MAAMC,OAAO,CAACX,oBAAoBA,mBAAmB,EAAE;YAErF,MAAMa,4BAA4BJ,qBAAqBP,GAAG,CAAC,CAACE,SAC1D,OAAOA,WAAW,YAAYA,WAAW,OAAOA,OAAOR,EAAE,GAAGQ;YAE9D,MAAMU,6BAA6BF,sBAAsBV,GAAG,CAAC,CAACE,SAC5D,OAAOA,WAAW,YAAYA,WAAW,OAAOA,OAAOR,EAAE,GAAGQ;YAG9DhB,QAAQ2B,MAAM,CAACC,IAAI,CAAC,CAAC,0BAA0B,EAAE7B,KAAKS,EAAE,EAAE;YAE1D,OAAOP,SAASC,IAAI,CAAC;gBACnBQ,iBAAiBG;gBACjBF,iBAAiBc;gBACjBb,kBAAkBc;YACpB;QACF,EAAE,OAAOG,OAAgB;YACvB,MAAM1B,UAAU0B,iBAAiBC,QAAQD,MAAM1B,OAAO,GAAG;YACzDH,QAAQ2B,MAAM,CAACE,KAAK,CAAC1B;YACrB,OAAOF,SAASC,IAAI,CAAC;gBAAEC;YAAQ,GAAG;gBAAEC,QAAQ;YAAI;QAClD;IACF,EAAC"}
{"version":3,"sources":["../../src/endpoints/add-certificate-to-user.ts"],"sourcesContent":["import { addDataAndFileToRequest, CollectionSlug, TypedCollection, type Endpoint } from 'payload'\n\ntype Args = {\n  userSlug: string\n  courseSlug: string\n  certificatesSlug: string\n}\n\ntype AddCertificateToUserHandler = (args: Args) => Endpoint['handler']\n\nexport const addCertificateToUserHandler: AddCertificateToUserHandler = ({ userSlug = 'users', courseSlug = 'courses', certificatesSlug = 'certificates' }) => async (req) => {\n  await addDataAndFileToRequest(req)\n  const data = req.data\n  const user = req.user\n  const payload = req.payload\n  const courseId = data?.courseId\n  const certificate = data?.certificate\n\n  if (!user) {\n    return Response.json(\n      { message: 'You must be logged in to add a certificate.' },\n      { status: 401 },\n    )\n  }\n\n  if (!courseId) {\n    return Response.json({ message: 'Course ID is required.' }, { status: 400 })\n  }\n\n  try {\n    const currentUser = await payload.findByID({\n      collection: userSlug as CollectionSlug,\n      id: user.id,\n      depth: 1,\n    })\n\n    if (!currentUser) {\n      return Response.json({ message: 'User not found.' }, { status: 404 })\n    }\n\n    const completedCourses = (currentUser.completedCourses || []).map((course: string | TypedCollection[typeof courseSlug]) =>\n      typeof course === 'object' ? course.id : course,\n    )\n\n    if (!completedCourses.includes(courseId)) {\n      return Response.json({ message: 'You have not completed this course.' }, { status: 403 })\n    }\n\n    const existingCertificates = (currentUser.certificates || []).map((cert: { certificate: string | TypedCollection[typeof certificatesSlug] }) => \n      typeof cert.certificate === 'object' ? cert.certificate.id : cert.certificate\n    )\n\n    if (existingCertificates.includes(certificate?.id)) {\n      return Response.json({ message: 'You already have this certificate.' }, { status: 400 })\n    }\n\n    await payload.update({\n      collection: userSlug as CollectionSlug,\n      id: user.id,\n      data: {\n        certificates: [\n          ...(currentUser.certificates || []),\n          {\n            certificate: certificate.id,\n            completedDate: new Date().toISOString(),\n          },\n        ],\n      },\n    })\n\n    \n\n    payload.logger.info(`Certificate added to user ${user.id} for course ${courseId}`)\n\n    return Response.json({ success: true, message: 'Successfully added certificate to user.' })\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'An unknown error occurred.'\n    payload.logger.error(message)\n    return Response.json({ message }, { status: 500 })\n  }\n}\n"],"names":["addDataAndFileToRequest","addCertificateToUserHandler","userSlug","courseSlug","certificatesSlug","req","data","user","payload","courseId","certificate","Response","json","message","status","currentUser","findByID","collection","id","depth","completedCourses","map","course","includes","existingCertificates","certificates","cert","update","completedDate","Date","toISOString","logger","info","success","error","Error"],"mappings":"AAAA,SAASA,uBAAuB,QAAwD,UAAS;AAUjG,OAAO,MAAMC,8BAA2D,CAAC,EAAEC,WAAW,OAAO,EAAEC,aAAa,SAAS,EAAEC,mBAAmB,cAAc,EAAE,GAAK,OAAOC;QACpK,MAAML,wBAAwBK;QAC9B,MAAMC,OAAOD,IAAIC,IAAI;QACrB,MAAMC,OAAOF,IAAIE,IAAI;QACrB,MAAMC,UAAUH,IAAIG,OAAO;QAC3B,MAAMC,WAAWH,MAAMG;QACvB,MAAMC,cAAcJ,MAAMI;QAE1B,IAAI,CAACH,MAAM;YACT,OAAOI,SAASC,IAAI,CAClB;gBAAEC,SAAS;YAA8C,GACzD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,IAAI,CAACL,UAAU;YACb,OAAOE,SAASC,IAAI,CAAC;gBAAEC,SAAS;YAAyB,GAAG;gBAAEC,QAAQ;YAAI;QAC5E;QAEA,IAAI;YACF,MAAMC,cAAc,MAAMP,QAAQQ,QAAQ,CAAC;gBACzCC,YAAYf;gBACZgB,IAAIX,KAAKW,EAAE;gBACXC,OAAO;YACT;YAEA,IAAI,CAACJ,aAAa;gBAChB,OAAOJ,SAASC,IAAI,CAAC;oBAAEC,SAAS;gBAAkB,GAAG;oBAAEC,QAAQ;gBAAI;YACrE;YAEA,MAAMM,mBAAmB,AAACL,CAAAA,YAAYK,gBAAgB,IAAI,EAAE,AAAD,EAAGC,GAAG,CAAC,CAACC,SACjE,OAAOA,WAAW,WAAWA,OAAOJ,EAAE,GAAGI;YAG3C,IAAI,CAACF,iBAAiBG,QAAQ,CAACd,WAAW;gBACxC,OAAOE,SAASC,IAAI,CAAC;oBAAEC,SAAS;gBAAsC,GAAG;oBAAEC,QAAQ;gBAAI;YACzF;YAEA,MAAMU,uBAAuB,AAACT,CAAAA,YAAYU,YAAY,IAAI,EAAE,AAAD,EAAGJ,GAAG,CAAC,CAACK,OACjE,OAAOA,KAAKhB,WAAW,KAAK,WAAWgB,KAAKhB,WAAW,CAACQ,EAAE,GAAGQ,KAAKhB,WAAW;YAG/E,IAAIc,qBAAqBD,QAAQ,CAACb,aAAaQ,KAAK;gBAClD,OAAOP,SAASC,IAAI,CAAC;oBAAEC,SAAS;gBAAqC,GAAG;oBAAEC,QAAQ;gBAAI;YACxF;YAEA,MAAMN,QAAQmB,MAAM,CAAC;gBACnBV,YAAYf;gBACZgB,IAAIX,KAAKW,EAAE;gBACXZ,MAAM;oBACJmB,cAAc;2BACRV,YAAYU,YAAY,IAAI,EAAE;wBAClC;4BACEf,aAAaA,YAAYQ,EAAE;4BAC3BU,eAAe,IAAIC,OAAOC,WAAW;wBACvC;qBACD;gBACH;YACF;YAIAtB,QAAQuB,MAAM,CAACC,IAAI,CAAC,CAAC,0BAA0B,EAAEzB,KAAKW,EAAE,CAAC,YAAY,EAAET,UAAU;YAEjF,OAAOE,SAASC,IAAI,CAAC;gBAAEqB,SAAS;gBAAMpB,SAAS;YAA0C;QAC3F,EAAE,OAAOqB,OAAgB;YACvB,MAAMrB,UAAUqB,iBAAiBC,QAAQD,MAAMrB,OAAO,GAAG;YACzDL,QAAQuB,MAAM,CAACG,KAAK,CAACrB;YACrB,OAAOF,SAASC,IAAI,CAAC;gBAAEC;YAAQ,GAAG;gBAAEC,QAAQ;YAAI;QAClD;IACF,EAAC"}
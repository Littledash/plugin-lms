{"version":3,"sources":["../../src/endpoints/enroll.ts"],"sourcesContent":["import { addDataAndFileToRequest, CollectionSlug, TypedCollection, type Endpoint } from 'payload'\nimport type { CourseProgress } from '../providers/types.js'\n\ntype Args = {\n  userSlug: string\n  courseSlug: string\n}\n\ntype EnrollHandler = (args: Args) => Endpoint['handler']\n\nexport const enrollHandler: EnrollHandler = ({ userSlug = 'users', courseSlug = 'courses' }) => async (req) => {\n  await addDataAndFileToRequest(req)\n  const data = req.data\n  const user = req.user\n  const payload = req.payload\n  const courseId = data?.courseId\n\n  if (!user) {\n    return Response.json({ message: 'You must be logged in to enroll.' }, { status: 401 })\n  }\n\n  if (!courseId) {\n    return Response.json({ message: 'Course ID is required.' }, { status: 400 })\n  }\n\n  try {\n    const currentUser = await payload.findByID({\n      collection: userSlug as CollectionSlug,\n      id: user.id,\n      depth: 1,\n    })\n\n    const course = await payload.findByID({\n      collection: courseSlug as CollectionSlug,\n      id: courseId,\n      depth: 1,\n    })\n\n    if (!currentUser) {\n      return Response.json({ message: 'User not found.' }, { status: 404 })\n    }\n\n    const enrolledStudentIds = (course?.enrolledStudents || []).map((student: string | TypedCollection[typeof userSlug]) =>\n      typeof student === 'object' ? student.id : student,\n    )\n\n    const enrolledCourseIds = (currentUser.enrolledCourses || []).map(\n      (course: string | TypedCollection[typeof courseSlug]) => (typeof course === 'object' ? course.id : course),\n    )\n\n    const completedCourseIds = (currentUser.completedCourses || []).map(\n      (course: string | TypedCollection[typeof courseSlug]) => (typeof course === 'object' ? course.id : course),\n    )\n\n    if (\n      enrolledStudentIds?.includes(user.id) ||\n      enrolledCourseIds.includes(courseId)\n    ) {\n      return Response.json({ message: 'You are already enrolled in this course.' }, { status: 409 })\n    }\n\n    if (\n      completedCourseIds.includes(courseId) \n    ) {\n      return Response.json({ message: 'You have already completed this course.' }, { status: 409 })\n    }\n\n    await payload.update({\n      collection: courseSlug as CollectionSlug,\n      id: courseId,\n      data: {\n        enrolledStudents: [...enrolledStudentIds, user.id],\n      },\n    })\n\n    // Initialize course progress for the user\n    const coursesProgress = currentUser.coursesProgress || []\n    \n    // Check if course progress already exists for this course\n    const courseProgressExists = coursesProgress.some((progress: CourseProgress) => {\n      if (typeof progress.course === 'object' && progress.course !== null) {\n        return progress.course.id === courseId\n      }\n      return progress.course === courseId\n    })\n    \n    if (!courseProgressExists) {\n      // Create new course progress entry\n      const newCourseProgress = {\n        course: courseId,\n        completed: false,\n        completedLessons: [],\n        completedQuizzes: [],\n      }\n      \n      await payload.update({\n        collection: userSlug as CollectionSlug,\n        id: user.id,\n        data: {\n          coursesProgress: [...coursesProgress, newCourseProgress],\n        },\n      })\n    }\n\n    payload.logger.info(`User ${user.id} enrolled in course ${courseId}`)\n\n    return Response.json({ success: true, message: 'Successfully enrolled in course.' })\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'An unknown error occurred.'\n    payload.logger.error(message)\n    return Response.json({ message }, { status: 500 })\n  }\n}\n"],"names":["addDataAndFileToRequest","enrollHandler","userSlug","courseSlug","req","data","user","payload","courseId","Response","json","message","status","currentUser","findByID","collection","id","depth","course","enrolledStudentIds","enrolledStudents","map","student","enrolledCourseIds","enrolledCourses","completedCourseIds","completedCourses","includes","update","coursesProgress","courseProgressExists","some","progress","newCourseProgress","completed","completedLessons","completedQuizzes","logger","info","success","error","Error"],"mappings":"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"}
{"version":3,"sources":["../../src/endpoints/add-user-to-group.ts"],"sourcesContent":["import { addDataAndFileToRequest, CollectionSlug, TypedCollection, type Endpoint } from 'payload'\n\ntype Args = {\n  userSlug: string\n  groupSlug: string\n}\n\ntype AddUserToGroupHandler = (args: Args) => Endpoint['handler']\n\nexport const addUserToGroupHandler: AddUserToGroupHandler = ({ \n  userSlug = 'users', \n  groupSlug = 'groups' \n}) => async (req) => {\n  await addDataAndFileToRequest(req)\n  const data = req.data\n  const user = req.user\n  const payload = req.payload\n  const groupId = data?.groupId\n  const userId = data?.userId\n  const role = data?.role // 'leader' or 'student'\n\n  if (!user) {\n    return Response.json(\n      { message: 'You must be logged in to add users to a group.' },\n      { status: 401 },\n    )\n  }\n\n  if (!groupId || !userId || !role) {\n    return Response.json(\n      { message: 'Group ID, User ID, and role are required.' },\n      { status: 400 },\n    )\n  }\n\n  if (!['leader', 'student'].includes(role)) {\n    return Response.json(\n      { message: 'Role must be either \"leader\" or \"student\".' },\n      { status: 400 },\n    )\n  }\n\n  try {\n    const group = await payload.findByID({\n      collection: groupSlug as CollectionSlug,\n      id: groupId,\n      depth: 1,\n    })\n\n    if (!group) {\n      return Response.json({ message: 'Group not found.' }, { status: 404 })\n    }\n\n    const targetUser = await payload.findByID({\n      collection: userSlug as CollectionSlug,\n      id: userId,\n      depth: 1,\n    })\n\n    if (!targetUser) {\n      return Response.json({ message: 'User not found.' }, { status: 404 })\n    }\n\n    // Check if user is already in the group\n    const currentLeaders = (group.leaders?.docs || []).map(\n      (leader: string | TypedCollection[typeof userSlug]) => (typeof leader === 'object' ? leader.id : leader),\n    )\n    const currentStudents = (group.users?.docs || []).map(\n      (student: string | TypedCollection[typeof userSlug]) => (typeof student === 'object' ? student.id : student),\n    )\n\n    if (role === 'leader' && currentLeaders.includes(userId)) {\n      return Response.json({ message: 'User is already a leader in this group.' }, { status: 409 })\n    }\n\n    if (role === 'student' && currentStudents.includes(userId)) {\n      return Response.json({ message: 'User is already a student in this group.' }, { status: 409 })\n    }\n\n    // Add user to the appropriate role\n    const updateData: Record<string, string[]> = {}\n    \n    if (role === 'leader') {\n      updateData.leaders = [...currentLeaders, userId]\n    } else {\n      updateData.users = [...currentStudents, userId]\n    }\n\n    await payload.update({\n      collection: groupSlug as CollectionSlug,\n      id: groupId,\n      data: updateData,\n    })\n\n    payload.logger.info(`User ${userId} added to group ${groupId} as ${role}`)\n\n    return Response.json({ \n      success: true, \n      message: `Successfully added user to group as ${role}.` \n    })\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'An unknown error occurred.'\n    payload.logger.error(message)\n    return Response.json({ message }, { status: 500 })\n  }\n}\n"],"names":["addDataAndFileToRequest","addUserToGroupHandler","userSlug","groupSlug","req","data","user","payload","groupId","userId","role","Response","json","message","status","includes","group","findByID","collection","id","depth","targetUser","currentLeaders","leaders","docs","map","leader","currentStudents","users","student","updateData","update","logger","info","success","error","Error"],"mappings":"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"}
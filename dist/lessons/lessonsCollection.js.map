{"version":3,"sources":["../../src/lessons/lessonsCollection.ts"],"sourcesContent":["import { CollectionConfig, Field } from 'payload'\nimport { FieldsOverride } from '../types.js'\nimport { embeddedVideo } from '../fields/embeddedVideo.js'\nimport { isAdminOrAuthor } from '../access/isAdminOrAuthor.js'\n\nimport { isAdminOrAuthorOrEnrolledInCourseFieldLevel } from '../access/isAdminOrAuthorOrEnrolledInCourse.js'\nimport { isAdminOrPublished } from '../access/isAdminOrPublished.js'\nimport { videoProgression } from '../fields/videoProgression.js'\n/**\n * Props interface for configuring the lessons collection\n * @property coursesCollectionSlug - Slug for the courses collection (default: 'courses')\n * @property mediaCollectionSlug - Slug for the media collection (default: 'media')\n * @property quizzesCollectionSlug - Slug for the quizzes collection (default: 'quizzes')\n * @property overrides - Optional configuration overrides for fields and collection settings\n */\ntype Props = {\n  coursesCollectionSlug?: string\n  mediaCollectionSlug?: string\n  quizzesCollectionSlug?: string\n  overrides?: { fields?: FieldsOverride } & Partial<Omit<CollectionConfig, 'fields'>>\n}\n\n/**\n * Creates a lessons collection configuration for Payload CMS\n * This collection manages individual lessons within courses, including content, media, and assessments\n *\n * @param props - Configuration properties for the lessons collection\n * @returns CollectionConfig object for lessons\n */\nexport const lessonsCollection: (props?: Props) => CollectionConfig<'lessons'> = (props) => {\n  const {\n    overrides,\n    mediaCollectionSlug = 'media',\n    coursesCollectionSlug = 'courses',\n    quizzesCollectionSlug = 'quizzes',\n  } = props || {}\n  const fieldsOverride = overrides?.fields\n\n  /**\n   * Default fields for the lessons collection\n   * Includes lesson content, media, progression control, and assessment relationships\n   */\n  const defaultFields: Field[] = [\n    {\n      name: 'title',\n      type: 'text',\n      required: true,\n      admin: {\n        description: 'The title of the lesson',\n      },\n    },\n    {\n      name: 'excerpt',\n      type: 'textarea',\n      admin: {\n        description: 'The excerpt of the lesson',\n      },\n    },\n    {\n      name: 'content',\n      type: 'richText',\n      required: true,\n      admin: {\n        description: 'The content of the lesson',\n      },\n      access: {\n        read: isAdminOrAuthorOrEnrolledInCourseFieldLevel,\n      },\n    },\n    {\n      name: 'featuredImage',\n      type: 'upload',\n      relationTo: mediaCollectionSlug,\n      admin: {\n        position: 'sidebar',\n        description: 'The featured image of the lesson',\n      },\n    },\n    {\n      type: 'tabs',\n      tabs: [\n        {\n          name: 'lessonSettings',\n          label: 'Lesson Settings',\n          description: 'Controls the look and feel of the lesson and optional content settings',\n          fields: [\n            {\n              name: 'lessonMaterials',\n              type: 'richText',\n              label: 'Lesson Materials',\n              admin: {\n                description: 'The materials of the lesson',\n              },\n              access: {\n                read: isAdminOrAuthorOrEnrolledInCourseFieldLevel,\n              },\n            },\n            embeddedVideo({\n              mediaCollectionSlug,\n              overrides: {\n                name: 'lessonVideo',\n                access: {\n                  read: isAdminOrAuthorOrEnrolledInCourseFieldLevel,\n                },\n                admin: {\n                  description: 'The below video is tied to Course progression',\n                },\n              },\n            }),\n            videoProgression({\n              overrides: {\n                admin: {\n                  condition: (data, { lessonVideo }) => Boolean(lessonVideo.embed),\n                },\n                access: {\n                  read: isAdminOrAuthorOrEnrolledInCourseFieldLevel,\n                },\n              },\n            }),\n          ],\n        },\n        {\n          label: 'Access Settings',\n          name: 'accessSettings',\n          description: 'Controls the timing and way lessons can be accessed.',\n          fields: [\n            {\n              name: 'lessonReleaseSchedule',\n              type: 'select',\n              label: 'Progression Behavior',\n              options: [\n                { label: 'Immediately', value: 'immediately' },\n                { label: 'Enrollment', value: 'enrollment' },\n                { label: 'Specific Date', value: 'specificDate' },\n              ],\n              defaultValue: 'immediately',\n              admin: {\n                description: 'The progression behavior of the lesson',\n              },\n            },  \n            {\n              name: 'lessonRelaseDays',\n              type: 'number',\n              label: 'Day(s) after enrollment',\n              admin: {\n                description: 'The number of days after enrollment the lesson will be released',\n                condition: (data, { lessonReleaseSchedule }) => lessonReleaseSchedule === 'enrollment',\n              },\n            },\n            {\n              name: 'lessonReleaseDate',\n              type: 'date',\n              admin: {\n                description: 'The date the lesson will be released',\n                condition: (data, { lessonReleaseSchedule }) => lessonReleaseSchedule === 'specificDate',\n              },\n            },\n          ],\n        },\n      ],\n    },\n\n\n\n    {\n      name: 'course',\n      type: 'relationship',\n      relationTo: coursesCollectionSlug,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The course that the lesson belongs to',\n      },\n    },\n    {\n      name: 'quizzes',\n      type: 'relationship',\n      relationTo: quizzesCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The quizzes that are part of the lesson',\n      },\n    },\n  ]\n\n  // Apply field overrides if provided\n  const fields =\n    fieldsOverride && typeof fieldsOverride === 'function'\n      ? fieldsOverride({ defaultFields })\n      : defaultFields\n\n  /**\n   * Base configuration for the lessons collection\n   * Includes slug, access control, timestamps, and admin settings\n   */\n  const baseConfig: CollectionConfig = {\n    slug: 'lessons',\n    access: {\n      create: isAdminOrAuthor,\n      read: isAdminOrPublished,\n      update: isAdminOrAuthor,\n      delete: isAdminOrAuthor,\n    },\n    timestamps: true,\n    ...overrides,\n    admin: {\n      useAsTitle: 'title',\n      group: 'LMS',\n      ...overrides?.admin,\n    },\n    fields,\n  }\n\n  return { ...baseConfig }\n}\n"],"names":["embeddedVideo","isAdminOrAuthor","isAdminOrAuthorOrEnrolledInCourseFieldLevel","isAdminOrPublished","videoProgression","lessonsCollection","props","overrides","mediaCollectionSlug","coursesCollectionSlug","quizzesCollectionSlug","fieldsOverride","fields","defaultFields","name","type","required","admin","description","access","read","relationTo","position","tabs","label","condition","data","lessonVideo","Boolean","embed","options","value","defaultValue","lessonReleaseSchedule","allowCreate","hasMany","baseConfig","slug","create","update","delete","timestamps","useAsTitle","group"],"mappings":"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"}
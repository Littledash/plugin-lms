{"version":3,"sources":["../../src/plugin/index.ts"],"sourcesContent":["import type { Config } from 'payload'\n\nimport type { LMSPluginConfig, SanitizedLMSPluginConfig } from '../types.js'\nimport { addressesCollection } from '../addresses/addressesCollection.js'\nimport { coursesCollection } from '../courses/coursesCollection.js'\nimport { groupsCollection } from '../groups/groupsCollection.js'\nimport { lessonsCollection } from '../lessons/lessonsCollection.js'\nimport { quizzesCollection } from '../quizzes/quizzesCollection.js'\nimport { categoriesCollection } from '../categoires/categoriesCollection.js'\nimport { tagsCollection } from '../tags/tagsCollection.js'\nimport { certificatesCollection } from '../certificates/certificatesCollection.js'\nimport { questionsCollection } from '../questions/questionsCollection.js'\nimport { topicsCollection } from '../topics/topicsCollection.js'\nimport { defaultAddressFields } from '../fields/defaultAddressFields.js'\nimport { sanitizePluginConfig } from '../utilities/sanitizePluginConfig.js'\nimport { getCollectionSlugMap } from '../utilities/getCollectionSlugMap.js'\nimport { studentsCollection } from '../students/studentsCollection.js'\nimport { defaultStudentFields } from '../fields/defaultStudentFields.js'\nimport { completeLessonHandler } from '../endpoints/complete-lesson.js'\nimport { enrollHandler } from '../endpoints/enroll.js'\nimport { submitQuizHandler } from '../endpoints/submit-quiz.js'\nimport { completeCourseHandler } from '../endpoints/complete-course.js'\nimport { generateCertificateHandler } from '../endpoints/generate-certificate.js'\nimport { addUserToGroupHandler } from '../endpoints/add-user-to-group.js'\nimport { fetchProgressHandler } from '../endpoints/fetch-progress.js'\n\nexport const lmsPlugin =\n  (pluginConfig?: LMSPluginConfig) =>\n  (incomingConfig: Config): Config => {\n    if (!pluginConfig) {\n      return incomingConfig\n    }\n\n    const sanitizedPluginConfig = sanitizePluginConfig({ pluginConfig })\n\n    /**\n     * Used to keep track of the slugs of collections in case they are overridden by the user.\n     */\n    const collectionSlugMap = getCollectionSlugMap({ sanitizedPluginConfig })\n\n    // Ensure collections exists\n    if (!incomingConfig.collections) {\n      incomingConfig.collections = []\n    }\n\n    const currenciesConfig: Required<SanitizedLMSPluginConfig['currencies']> =\n      sanitizedPluginConfig.currencies\n\n    let studentsFields\n\n    if (sanitizedPluginConfig.students) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.students === 'object'\n          ? sanitizedPluginConfig.students.studentsCollection\n          : undefined\n\n      studentsFields = sanitizedPluginConfig.students.studentsFields\n      console.log('studentsFields', studentsFields)\n\n      if (studentsFields) {\n        const students = studentsCollection({\n          studentsCollectionSlug: collectionSlugMap.students,\n          studentsFields: studentsFields({ defaultFields: defaultStudentFields() }),\n          overrides: collectionOverrides,\n        })\n\n        incomingConfig.collections.push(students)\n      }\n    }\n\n    let addressFields\n\n    if (sanitizedPluginConfig.addresses) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.addresses === 'object'\n          ? sanitizedPluginConfig.addresses.addressesCollection\n          : undefined\n\n      addressFields = sanitizedPluginConfig.addresses.addressFields\n\n      const supportedCountries = sanitizedPluginConfig.addresses.supportedCountries\n\n      const addresses = addressesCollection({\n        addressFields: addressFields({ defaultFields: defaultAddressFields() }),\n        studentsCollectionSlug: collectionSlugMap.students,\n        overrides: collectionOverrides,\n        supportedCountries,\n      })\n\n      incomingConfig.collections.push(addresses)\n    }\n\n    if (sanitizedPluginConfig.certificates) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.certificates === 'object'\n          ? sanitizedPluginConfig.certificates.certificatesCollection\n          : undefined\n\n      const certificates = certificatesCollection({\n        mediaCollectionSlug: collectionSlugMap.media,\n        studentsCollectionSlug: collectionSlugMap.students,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(certificates)\n    }\n\n    if (sanitizedPluginConfig.courses) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.courses === 'object'\n          ? sanitizedPluginConfig.courses.coursesCollection\n          : undefined\n\n      const courses = coursesCollection({\n        categoriesCollectionSlug: collectionSlugMap.categories,\n        certificatesCollectionSlug: collectionSlugMap.certificates,\n        currenciesConfig,\n        lessonsCollectionSlug: collectionSlugMap.lessons,\n        mediaCollectionSlug: collectionSlugMap.media,\n        studentsCollectionSlug: collectionSlugMap.students,\n        tagsCollectionSlug: collectionSlugMap.tags,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(courses)\n    }\n\n    if (sanitizedPluginConfig.groups) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.groups === 'object'\n          ? sanitizedPluginConfig.groups.groupsCollection\n          : undefined\n\n      const groups = groupsCollection({\n        coursesCollectionSlug: collectionSlugMap.courses,\n        usersCollectionSlug: collectionSlugMap.students,\n        certificatesCollectionSlug: collectionSlugMap.certificates,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(groups)\n    }\n\n    if (sanitizedPluginConfig.lessons) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.lessons === 'object'\n          ? sanitizedPluginConfig.lessons.lessonsCollection\n          : undefined\n\n      const lessons = lessonsCollection({\n        coursesCollectionSlug: collectionSlugMap.courses,\n        mediaCollectionSlug: collectionSlugMap.media,\n        quizzesCollectionSlug: collectionSlugMap.quizzes,\n        categoriesCollectionSlug: collectionSlugMap.categories,\n        studentsCollectionSlug: collectionSlugMap.students,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(lessons)\n    }\n\n    if (sanitizedPluginConfig.topics) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.topics === 'object'\n          ? sanitizedPluginConfig.topics.topicsCollection\n          : undefined\n\n      const topics = topicsCollection({\n        coursesCollectionSlug: collectionSlugMap.courses,\n        mediaCollectionSlug: collectionSlugMap.media,\n        quizzesCollectionSlug: collectionSlugMap.quizzes,\n        lessonsCollectionSlug: collectionSlugMap.lessons,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(topics)\n    }\n\n    if (sanitizedPluginConfig.quizzes) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.quizzes === 'object'\n          ? sanitizedPluginConfig.quizzes.quizzesCollection\n          : undefined\n\n      const quizzes = quizzesCollection({\n        mediaCollectionSlug: collectionSlugMap.media,\n        studentsCollectionSlug: collectionSlugMap.students,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(quizzes)\n    }\n\n    if (sanitizedPluginConfig.categories) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.categories === 'object'\n          ? sanitizedPluginConfig.categories.categoriesCollection\n          : undefined\n\n      const categories = categoriesCollection({\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(categories)\n    }\n\n    if (sanitizedPluginConfig.tags) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.tags === 'object'\n          ? sanitizedPluginConfig.tags.tagsCollection\n          : undefined\n\n      const tags = tagsCollection({\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(tags)\n    }\n\n    if (sanitizedPluginConfig.questions) {\n      const collectionOverrides =\n        typeof sanitizedPluginConfig.questions === 'object'\n          ? sanitizedPluginConfig.questions.questionsCollection\n          : undefined\n\n      const questions = questionsCollection({\n        studentsCollectionSlug: collectionSlugMap.students,\n        overrides: collectionOverrides,\n      })\n      incomingConfig.collections.push(questions)\n    }\n\n    if (sanitizedPluginConfig.endpoints) {\n      incomingConfig.endpoints = [\n        ...(incomingConfig.endpoints || []),\n        ...sanitizedPluginConfig.endpoints,\n      ]\n    }\n\n    // Add default endpoints\n    const defaultEndpoints = [\n      {\n        path: '/lms/enroll',\n        method: 'post' as const,\n        handler: enrollHandler({\n          userSlug: collectionSlugMap.students,\n          courseSlug: collectionSlugMap.courses,\n        }),\n      },\n      {\n        path: '/lms/complete-lesson',\n        method: 'post' as const, \n        handler: completeLessonHandler({\n          userSlug: collectionSlugMap.students,\n        }),\n      },\n      {\n        path: '/lms/submit-quiz',\n        method: 'post' as const,\n        handler: submitQuizHandler({\n          userSlug: collectionSlugMap.students,\n          quizzesSlug: collectionSlugMap.quizzes,\n        }),\n      },\n      {\n        path: '/lms/complete-course',\n        method: 'post' as const,\n        handler: completeCourseHandler({\n          userSlug: collectionSlugMap.students,\n          courseSlug: collectionSlugMap.courses,\n        }),\n      },\n      {\n        path: '/lms/generate-certificate',\n        method: 'post' as const,\n        handler: generateCertificateHandler({\n          userSlug: collectionSlugMap.students,\n          courseSlug: collectionSlugMap.courses,\n          certificatesSlug: collectionSlugMap.certificates,\n        }),\n      },\n      {\n        path: '/lms/add-user-to-group',\n        method: 'post' as const,\n        handler: addUserToGroupHandler({\n          userSlug: collectionSlugMap.students,\n          groupSlug: collectionSlugMap.groups,\n        }),\n      },\n      {\n        path: '/lms/fetch-progress',\n        method: 'get' as const,\n        handler: fetchProgressHandler({\n          userSlug: collectionSlugMap.students,\n        }),\n      },\n    ]\n\n    incomingConfig.endpoints = [\n      ...(incomingConfig.endpoints || []),\n      ...defaultEndpoints,\n    ]\n\n    \n\n    return {\n      ...incomingConfig,\n    }\n  }\n"],"names":["addressesCollection","coursesCollection","groupsCollection","lessonsCollection","quizzesCollection","categoriesCollection","tagsCollection","certificatesCollection","questionsCollection","topicsCollection","defaultAddressFields","sanitizePluginConfig","getCollectionSlugMap","studentsCollection","defaultStudentFields","completeLessonHandler","enrollHandler","submitQuizHandler","completeCourseHandler","generateCertificateHandler","addUserToGroupHandler","fetchProgressHandler","lmsPlugin","pluginConfig","incomingConfig","sanitizedPluginConfig","collectionSlugMap","collections","currenciesConfig","currencies","studentsFields","students","collectionOverrides","undefined","console","log","studentsCollectionSlug","defaultFields","overrides","push","addressFields","addresses","supportedCountries","certificates","mediaCollectionSlug","media","courses","categoriesCollectionSlug","categories","certificatesCollectionSlug","lessonsCollectionSlug","lessons","tagsCollectionSlug","tags","groups","coursesCollectionSlug","usersCollectionSlug","quizzesCollectionSlug","quizzes","topics","questions","endpoints","defaultEndpoints","path","method","handler","userSlug","courseSlug","quizzesSlug","certificatesSlug","groupSlug"],"mappings":"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"}
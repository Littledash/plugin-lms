{"version":3,"sources":["../../src/courses/coursesCollection.ts"],"sourcesContent":["import { CollectionConfig, Field } from 'payload'\nimport { FieldsOverride } from '../types.js'\nimport type { CurrenciesConfig } from '../types.js'\nimport { pricesField } from '../fields/pricesField.js'\nimport { isAdminOrAuthorFieldLevel } from '../access/isAdminOrAuthor.js'\nimport { isAdminOrAuthorOrStudentFieldLevel } from '../access/isAdminOrAuthorOrStudent.js'\nimport { isAdminOrAuthorOrEnrolledInCourseFieldLevel } from '../access/isAdminOrAuthorOrEnrolledInCourse.js'\n/**\n * Props interface for configuring the courses collection\n * @property categoriesCollectionSlug - Slug for the categories collection (default: 'categories')\n * @property certificatesCollectionSlug - Slug for the certificates collection (default: 'certificates')\n * @property currenciesConfig - Configuration for supported currencies\n * @property lessonsCollectionSlug - Slug for the lessons collection (default: 'lessons')\n * @property mediaCollectionSlug - Slug for the media collection (default: 'media')\n * @property studentsCollectionSlug - Slug for the students collection (default: 'users')\n * @property tagsCollectionSlug - Slug for the tags collection (default: 'tags')\n * @property overrides - Optional configuration overrides for fields and collection settings\n */\ntype Props = {\n  categoriesCollectionSlug?: string\n  certificatesCollectionSlug?: string\n  currenciesConfig?: CurrenciesConfig\n  lessonsCollectionSlug?: string\n  mediaCollectionSlug?: string\n  studentsCollectionSlug?: string\n  tagsCollectionSlug?: string\n  overrides?: { fields?: FieldsOverride } & Partial<Omit<CollectionConfig, 'fields'>>\n}\n\n/**\n * Creates a courses collection configuration for Payload CMS\n * This collection manages educational courses with various access modes, pricing, and content organization\n *\n * @param props - Configuration properties for the courses collection\n * @returns CollectionConfig object for courses\n */\nexport const coursesCollection: (props?: Props) => CollectionConfig<'courses'> = (props) => {\n  const {\n    overrides,\n    mediaCollectionSlug = 'media',\n    lessonsCollectionSlug = 'lessons',\n    categoriesCollectionSlug = 'categories',\n    tagsCollectionSlug = 'tags',\n    currenciesConfig,\n    studentsCollectionSlug = 'users',\n    certificatesCollectionSlug = 'certificates',\n  } = props || {}\n\n  const fieldsOverride = overrides?.fields\n\n  /**\n   * Default fields for the courses collection\n   * Includes course details, access control, pricing, relationships, and content organization\n   */\n  const defaultFields: Field[] = [\n    {\n      name: 'title',\n      type: 'text',\n      required: true,\n      admin: {\n        description: 'The title of the course',\n      },\n    },\n    {\n      name: 'excerpt',\n      type: 'textarea',\n      admin: {\n        description: 'The excerpt of the course',\n      },\n    },\n    {\n      name: 'description',\n      type: 'richText',\n      admin: {\n        description: 'The description of the course',\n      },\n    },\n    {\n      name: 'lessons',\n      type: 'array',\n      label: 'Course Lessons',\n      admin: {\n        description: 'The lessons that are part of the course in specific order',\n      },\n      fields: [\n        {\n          name: 'lesson',\n          type: 'relationship',\n          relationTo: lessonsCollectionSlug,\n          required: true,\n        },\n        {\n          name: 'isOptional',\n          type: 'checkbox',\n          admin: {\n            width: '50%',\n            description: 'Check if this lesson is optional',\n          },\n        },\n      ],\n      access: {\n        read: isAdminOrAuthorOrStudentFieldLevel,\n      },\n    },\n\n    {\n      type: 'tabs',\n\n      tabs: [\n        {\n          label: 'Enrollment',\n          name: 'enrollment',\n          description: 'Controls how students gain access to the course',\n          fields: [\n            {\n              name: 'accessMode',\n              type: 'select',\n              defaultValue: 'open',\n              options: [\n                { label: 'Open', value: 'open' },\n                { label: 'Free', value: 'free' },\n                { label: 'Buy Now', value: 'buy now' },\n                { label: 'Recurring', value: 'recurring' },\n                { label: 'Closed', value: 'closed' },\n              ],\n              required: true,\n              admin: {\n                description: 'Controls how students gain access to the course',\n              },\n            },\n\n            ...(currenciesConfig\n              ? [\n                  pricesField({\n                    currenciesConfig,\n                    overrides: {\n                      admin: {\n                        condition: (_, siblingData) => {\n                          return ['buy now', 'recurring', 'closed'].includes(\n                            siblingData?.accessMode,\n                          )\n                        },\n                      },\n                    },\n                  }),\n                ]\n              : []),\n            {\n              name: 'enrollmentUrl',\n              type: 'text',\n              admin: {\n                description: 'The URL for the enrollment page',\n                condition: (_, siblingData) => siblingData?.accessMode === 'closed',\n              },\n            },\n          ],\n        },\n        {\n          label: 'Course Settings',\n          name: 'courseSettings',\n          description: 'Controls the look and feel of the course and optional content settings',\n          fields: [\n            {\n              name: 'courseMaterials',\n              type: 'richText',\n              admin: {\n                description: 'The materials that are part of the course',\n              },\n              access: {\n                read: isAdminOrAuthorOrEnrolledInCourseFieldLevel,\n              },\n            },\n\n            {\n              name: 'accessExpirationDays',\n              type: 'number',\n              admin: {\n                description: 'The number of days after which the access to the course will expire',\n              },\n            },\n\n            {\n              name: 'duration',\n              type: 'group',\n              fields: [\n                {\n                  type: 'row',\n                  fields: [\n                    {\n                      name: 'hours',\n                      type: 'number',\n                      label: 'hour(s)',\n                      admin: {\n                        description: 'The number of hours in the course',\n                        width: '50%',\n                      },\n                    },\n                    {\n                      name: 'minutes',\n                      type: 'number',\n                      label: 'minute(s)',\n                      admin: {\n                        width: '50%',\n                        description: 'The number of minutes in the course',\n                      },\n                    },\n                  ],\n                },\n              ],\n              admin: {\n                description: 'The duration of the course',\n              },\n            },\n          ],\n        },\n        {\n          label: 'Access Settings',\n          name: 'accessSettings',\n          description:\n            'Controls additional requirements and restrictions that enrollees need to meet to access the course',\n          fields: [\n            {\n              name: 'prerequisiteCourses',\n              type: 'array',\n              admin: {\n                description:\n                  'Courses that a student must complete before enrolling in this course with completion criteria.',\n              },\n              fields: [\n                {\n                  name: 'course',\n                  type: 'relationship',\n                  relationTo: 'courses',\n                  required: true,\n                },\n                {\n                  name: 'completionRequirement',\n                  type: 'select',\n                  defaultValue: 'complete',\n                  options: [\n                    { label: 'Complete Course', value: 'complete' },\n                    { label: 'Pass Final Quiz', value: 'passQuiz' },\n                    { label: 'Minimum Score', value: 'minimumScore' },\n                    { label: 'Complete Specific Lessons', value: 'specificLessons' },\n                  ],\n                  admin: {\n                    width: '50%',\n                    description: 'What is required to satisfy this prerequisite',\n                  },\n                },\n                {\n                  name: 'minimumScore',\n                  type: 'number',\n                  min: 0,\n                  max: 100,\n                  admin: {\n                    width: '50%',\n                    description: 'Minimum score required (0-100)',\n                    condition: (_, siblingData) =>\n                      siblingData?.completionRequirement === 'minimumScore',\n                  },\n                },\n                {\n                  name: 'requiredLessons',\n                  type: 'relationship',\n                  relationTo: lessonsCollectionSlug,\n                  hasMany: true,\n                  admin: {\n                    width: '50%',\n                    description: 'Specific lessons that must be completed',\n                    condition: (_, siblingData) =>\n                      siblingData?.completionRequirement === 'specificLessons',\n                  },\n                },\n                {\n                  name: 'isOptional',\n                  type: 'checkbox',\n                  defaultValue: false,\n                  admin: {\n                    width: '50%',\n                    description: 'Whether this prerequisite is optional',\n                  },\n                },\n              ],\n            },\n            {\n              name: 'requiredPoints',\n              type: 'number',\n              admin: {\n                description: 'The points that are required to access this course',\n              },\n            },\n            {\n              name: 'studentLimit',\n              type: 'number',\n              admin: {\n                description: 'The number of students that can enroll in the course',\n              },\n            },\n          ],\n        },\n        {\n          label: 'Awards',\n          name: 'awards',\n          description: 'Controls the awards settings of the course',\n          fields: [\n            {\n              name: 'certificate',\n              type: 'relationship',\n              relationTo: certificatesCollectionSlug,\n              hasMany: false,\n              admin: {\n                allowCreate: false,\n                description:\n                  'The certificate that is awarded to the students who complete the course',\n              },\n            },\n            {\n              name: 'coursePoints',\n              type: 'number',\n              label: 'Course completion points',\n              admin: {\n                description: 'The points that are awarded to the students who complete the course',\n              },\n            },\n          ],\n        },\n        {\n          label: 'Navigation',\n          name: 'navigation',\n          description: 'Controls the navigation settings of the course',\n          fields: [\n            {\n              name: 'navigationMode',\n              type: 'select',\n              label: 'Course Navigation Mode',\n              defaultValue: 'linear',\n              required: true,\n              options: [\n                { label: 'Linear', value: 'linear' },\n                { label: 'Free Form', value: 'free' },\n              ],\n              admin: {\n                description:\n                  'Controls how students interact with the content and their navigational experience',\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: 'enrolledStudents',\n      type: 'relationship',\n      relationTo: studentsCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'Controls the students enrolled in the course',\n      },\n      access: {\n        read: isAdminOrAuthorFieldLevel,\n      },\n    },\n    {\n      name: 'courseCompletedStudents',\n      type: 'relationship',\n      relationTo: studentsCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The students completed the course',\n      },\n    },\n    {\n      name: 'courseEnrolledGroups',\n      type: 'relationship',\n      relationTo: 'groups',\n      hasMany: true,\n      label: 'Course Enrolled Groups',\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        allowEdit: false,\n        description: 'Controls the groups enrolled in the course', // TODO move ibnto lms  plugin\n      },\n    },\n    {\n      name: 'authors',\n      type: 'relationship',\n      relationTo: studentsCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The authors of the course',\n      },\n      access: {\n        read: isAdminOrAuthorFieldLevel,\n      },\n    },\n    {\n      name: 'categories',\n      type: 'relationship',\n      relationTo: categoriesCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The categories that are part of the course',\n      },\n    },\n    {\n      name: 'tags',\n      type: 'relationship',\n      relationTo: tagsCollectionSlug,\n      hasMany: true,\n      admin: {\n        position: 'sidebar',\n        allowCreate: false,\n        description: 'The tags that are part of the course',\n      },\n    },\n    {\n      name: 'featuredImage',\n      type: 'upload',\n      relationTo: mediaCollectionSlug,\n      admin: {\n        position: 'sidebar',\n        description: 'The featured image of the course',\n      },\n    },\n  ]\n\n  // Apply field overrides if provided\n  const fields =\n    fieldsOverride && typeof fieldsOverride === 'function'\n      ? fieldsOverride({ defaultFields })\n      : defaultFields\n\n  /**\n   * Base configuration for the courses collection\n   * Includes slug, access control, timestamps, and admin settings\n   */\n  const baseConfig: CollectionConfig = {\n    slug: 'courses',\n    timestamps: true,\n    ...overrides,\n    admin: {\n      useAsTitle: 'title',\n      // group: 'LMS',\n      ...overrides?.admin,\n    },\n    fields,\n  }\n\n  return { ...baseConfig }\n}\n"],"names":["pricesField","isAdminOrAuthorFieldLevel","isAdminOrAuthorOrStudentFieldLevel","isAdminOrAuthorOrEnrolledInCourseFieldLevel","coursesCollection","props","overrides","mediaCollectionSlug","lessonsCollectionSlug","categoriesCollectionSlug","tagsCollectionSlug","currenciesConfig","studentsCollectionSlug","certificatesCollectionSlug","fieldsOverride","fields","defaultFields","name","type","required","admin","description","label","relationTo","width","access","read","tabs","defaultValue","options","value","condition","_","siblingData","includes","accessMode","min","max","completionRequirement","hasMany","allowCreate","position","allowEdit","baseConfig","slug","timestamps","useAsTitle"],"mappings":"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"}
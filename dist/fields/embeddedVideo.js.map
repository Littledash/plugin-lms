{"version":3,"sources":["../../src/fields/embeddedVideo.ts"],"sourcesContent":["import type { GroupField } from 'payload'\n\n/**\n * Props for the embedded video field configuration\n */\ntype Props = {\n  mediaCollectionSlug: string\n  overrides?: Partial<GroupField>\n}\n\n/**\n * Creates a group field for embedded video configuration\n * Supports Vimeo, YouTube, and internal video hosting\n * @param props - Configuration including media collection slug and field overrides\n * @returns A configured group field for video embedding\n */\nexport const embeddedVideo: (props?: Props) => GroupField = (props) => {\n  const { overrides = {}, mediaCollectionSlug = 'media' } = props || {}\n\n  const field: GroupField = {\n    name: 'embeddedVideo',\n    label: 'Embedded Video',\n    type: 'group',\n    interfaceName: 'EmbeddedVideo',\n    admin: {\n      hideGutter: true,\n    },\n    fields: [\n      {\n        name: 'embed',\n        type: 'checkbox',\n        admin: {\n          description: 'Embeds a Vimeo iframe.',\n        },\n      },\n      {\n        name: 'poster',\n        label: 'Poster Image',\n        type: 'upload',\n        relationTo: mediaCollectionSlug,\n        required: true,\n        admin: {\n          condition: (data, { embed }) => Boolean(embed),\n          description: 'Maximum upload file size: 4MB. Recommended file size for images is <500KB.',\n        },\n        localized: true,\n      },\n      {\n        name: 'platform',\n        type: 'select',\n        defaultValue: 'vimeo',\n        options: [\n          {\n            label: 'Vimeo',\n            value: 'vimeo',\n          },\n          {\n            label: 'Internal',\n            value: 'internal',\n          },\n          {\n            label: 'Youtube',\n            value: 'youtube',\n          },\n        ],\n        admin: {\n          condition: (data, { embed }) => Boolean(embed),\n        },\n      },\n      {\n        name: 'videoURL',\n        label: 'Video URL',\n        type: 'text',\n        required: true,\n        admin: {\n          condition: (data, { embed, platform }) =>\n            Boolean(embed) && Boolean(platform !== 'internal'),\n        },\n        localized: true,\n      },\n    ],\n    ...overrides,\n  }\n\n  return field\n}\n"],"names":["embeddedVideo","props","overrides","mediaCollectionSlug","field","name","label","type","interfaceName","admin","hideGutter","fields","description","relationTo","required","condition","data","embed","Boolean","localized","defaultValue","options","value","platform"],"mappings":"AAUA;;;;;CAKC,GACD,OAAO,MAAMA,gBAA+C,CAACC;IAC3D,MAAM,EAAEC,YAAY,CAAC,CAAC,EAAEC,sBAAsB,OAAO,EAAE,GAAGF,SAAS,CAAC;IAEpE,MAAMG,QAAoB;QACxBC,MAAM;QACNC,OAAO;QACPC,MAAM;QACNC,eAAe;QACfC,OAAO;YACLC,YAAY;QACd;QACAC,QAAQ;YACN;gBACEN,MAAM;gBACNE,MAAM;gBACNE,OAAO;oBACLG,aAAa;gBACf;YACF;YACA;gBACEP,MAAM;gBACNC,OAAO;gBACPC,MAAM;gBACNM,YAAYV;gBACZW,UAAU;gBACVL,OAAO;oBACLM,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAE,GAAKC,QAAQD;oBACxCL,aAAa;gBACf;gBACAO,WAAW;YACb;YACA;gBACEd,MAAM;gBACNE,MAAM;gBACNa,cAAc;gBACdC,SAAS;oBACP;wBACEf,OAAO;wBACPgB,OAAO;oBACT;oBACA;wBACEhB,OAAO;wBACPgB,OAAO;oBACT;oBACA;wBACEhB,OAAO;wBACPgB,OAAO;oBACT;iBACD;gBACDb,OAAO;oBACLM,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAE,GAAKC,QAAQD;gBAC1C;YACF;YACA;gBACEZ,MAAM;gBACNC,OAAO;gBACPC,MAAM;gBACNO,UAAU;gBACVL,OAAO;oBACLM,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAEM,QAAQ,EAAE,GACnCL,QAAQD,UAAUC,QAAQK,aAAa;gBAC3C;gBACAJ,WAAW;YACb;SACD;QACD,GAAGjB,SAAS;IACd;IAEA,OAAOE;AACT,EAAC"}
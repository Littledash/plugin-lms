{"version":3,"sources":["../../src/fields/addressFields.ts"],"sourcesContent":["import { countryOptions } from '../exports/helpers.js'\nimport { deepMerge } from '../exports/utilities.js'\n\nimport type { ArrayField, Field } from 'payload'\n\ntype AddressType = (options?: { overrides?: Partial<ArrayField> }) => Field\n\nexport const address: AddressType = ({ overrides = {} } = {}) => {\n  const generatedAddress: Field = {\n    name: 'address',\n    type: 'group',\n    interfaceName: 'Address',\n    fields: [\n      {\n        type: 'row',\n        fields: [\n          {\n            name: 'firstName',\n            type: 'text',\n            label: 'First Name',\n            admin: {\n              width: '50%',\n            },\n          },\n          {\n            name: 'lastName',\n            type: 'text',\n            label: 'Last Name',\n            admin: {\n              width: '50%',\n            },\n          },\n          {\n            name: 'company',\n            type: 'text',\n            label: 'Company',\n            admin: {\n              width: '100%',\n            },\n          },\n          {\n            name: 'addressLineOne',\n            type: 'text',\n            label: 'Address Line 1',\n            admin: {\n              width: '100%',\n            },\n          },\n          {\n            name: 'addressLineTwo',\n            type: 'text',\n            label: 'Address Line 2',\n            admin: {\n              width: '100%',\n            },\n          },\n          {\n            name: 'city',\n            type: 'text',\n            label: 'City',\n            admin: {\n              width: '33.33%',\n            },\n          },\n          {\n            name: 'state',\n            type: 'text',\n            label: 'State',\n            admin: {\n              width: '33.33%',\n            },\n          },\n          {\n            name: 'postcode',\n            type: 'text',\n            label: 'Postcode',\n            admin: {\n              width: '33.33%',\n            },\n          },\n          {\n            name: 'country',\n            type: 'select',\n            options: countryOptions,\n            defaultValue: 'AU',\n            admin: {\n              width: '33.33%',\n            },\n          },\n        ],\n      },\n    ],\n    admin: {\n      hideGutter: true,\n    },\n  }\n\n  return deepMerge(generatedAddress, overrides)\n}\n"],"names":["countryOptions","deepMerge","address","overrides","generatedAddress","name","type","interfaceName","fields","label","admin","width","options","defaultValue","hideGutter"],"mappings":"AAAA,SAASA,cAAc,QAAQ,wBAAuB;AACtD,SAASC,SAAS,QAAQ,0BAAyB;AAMnD,OAAO,MAAMC,UAAuB,CAAC,EAAEC,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1D,MAAMC,mBAA0B;QAC9BC,MAAM;QACNC,MAAM;QACNC,eAAe;QACfC,QAAQ;YACN;gBACEF,MAAM;gBACNE,QAAQ;oBACN;wBACEH,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNG,OAAO;wBACPC,OAAO;4BACLC,OAAO;wBACT;oBACF;oBACA;wBACEN,MAAM;wBACNC,MAAM;wBACNM,SAASZ;wBACTa,cAAc;wBACdH,OAAO;4BACLC,OAAO;wBACT;oBACF;iBACD;YACH;SACD;QACDD,OAAO;YACLI,YAAY;QACd;IACF;IAEA,OAAOb,UAAUG,kBAAkBD;AACrC,EAAC"}
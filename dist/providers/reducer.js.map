{"version":3,"sources":["../../src/providers/reducer.ts"],"sourcesContent":["import type { DefaultDocumentIDType } from 'payload'\nimport type { LMSUser, Course, Topic, Lesson, Quiz, Certificate, CourseProgress } from './types.js'\n\nexport type LMSState = {\n  users: LMSUser[]\n  courses: Course[]\n  topics: Topic[]\n  lessons: Lesson[]\n  progress: CourseProgress[]\n  quizzes: Quiz[]\n  certificates: Certificate[]\n  enrolledCourses: DefaultDocumentIDType[]\n  completedCourses: DefaultDocumentIDType[]\n  quizStarted: DefaultDocumentIDType | null\n  isLoading: boolean\n  error: Error | null\n}\n\nexport type LMSAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: Error | null }\n  | { type: 'SET_USERS'; payload: LMSUser[] }\n  | { type: 'SET_COURSES'; payload: Course[] }\n  | { type: 'SET_TOPICS'; payload: Topic[] }\n  | { type: 'SET_LESSONS'; payload: Lesson[] }\n  | { type: 'SET_QUIZZES'; payload: Quiz[] }\n  | { type: 'SET_QUIZ_STARTED'; payload: {\n    quizId: DefaultDocumentIDType\n    startedAt: string\n  } }\n  | { type: 'SET_QUIZ_EXITED'; payload: {\n    quizId: DefaultDocumentIDType\n    exitedAt: string\n\n  } }\n  | { type: 'SET_QUIZ_COMPLETED'; payload: {\n    quizId: DefaultDocumentIDType\n    completedAt: string\n    score: number\n  } }\n  | { type: 'SET_CERTIFICATES'; payload: Certificate[] }\n  | { type: 'ENROLL_IN_COURSE'; payload: DefaultDocumentIDType }\n  | { type: 'COMPLETE_COURSE'; payload: DefaultDocumentIDType }\n  | { type: 'UPDATE_PROGRESS'; payload: CourseProgress[] }\n  | { type: 'SET_ENROLLED_COURSES'; payload: DefaultDocumentIDType[] }\n  | { type: 'SET_COMPLETED_COURSES'; payload: DefaultDocumentIDType[] }\n  | { type: 'LOAD_FROM_STORAGE'; payload: { progress: CourseProgress[]; enrolledCourses: DefaultDocumentIDType[]; completedCourses: DefaultDocumentIDType[] } }\n  | { type: 'RESET_STATE' }\n\nexport const initialState: LMSState = {\n  users: [],\n  courses: [],\n  topics: [],\n  lessons: [],\n  progress: [],\n  quizzes: [],\n  certificates: [],\n  enrolledCourses: [],\n  completedCourses: [],\n  quizStarted: null,\n  isLoading: false,\n  error: null,\n}\n\nexport const lmsReducer = (state: LMSState, action: LMSAction): LMSState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      }\n\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.payload,\n      }\n\n    case 'SET_COURSES':\n      return {\n        ...state,\n        courses: action.payload,\n      }\n\n    case 'SET_TOPICS':\n      return {\n        ...state,\n        topics: action.payload,\n      }\n\n    case 'SET_LESSONS':\n      return {\n        ...state,\n        lessons: action.payload,\n      }\n\n    case 'SET_QUIZZES':\n      return {\n        ...state,\n        quizzes: action.payload,\n      }\n\n    case 'SET_CERTIFICATES':\n      return {\n        ...state,\n        certificates: action.payload,\n      }\n\n    case 'ENROLL_IN_COURSE':\n      return {\n        ...state,\n        enrolledCourses: [...state.enrolledCourses, action.payload],\n      }\n\n    case 'COMPLETE_COURSE':\n      return {\n        ...state,\n        enrolledCourses: state.enrolledCourses.filter((courseId) => courseId !== action.payload),\n        completedCourses: [...state.completedCourses, action.payload],\n      }\n\n    case 'UPDATE_PROGRESS':\n      return {\n        ...state,\n        progress: action.payload,\n      }\n\n    case 'SET_ENROLLED_COURSES':\n      return {\n        ...state,\n        enrolledCourses: action.payload,\n      }\n\n    case 'SET_COMPLETED_COURSES':\n      return {\n        ...state,\n        completedCourses: action.payload,\n      }\n\n    case 'SET_QUIZ_STARTED':\n      return {\n        ...state,\n        quizzes: state.quizzes.map((quiz) => quiz.id === action.payload.quizId ? { ...quiz, startedAt: action.payload.startedAt } : quiz),\n        quizStarted: action.payload.quizId,\n        isLoading: false,\n      }\n      \n    case 'SET_QUIZ_COMPLETED':\n      return {\n        ...state,\n        quizzes: state.quizzes.map((quiz) => quiz.id === action.payload.quizId ? { ...quiz, completedAt: action.payload.completedAt, score: action.payload.score } : quiz),\n        quizStarted: null,\n      }\n\n    case 'SET_QUIZ_EXITED':\n      return {\n        ...state,\n        quizzes: state.quizzes.map((quiz) => quiz.id === action.payload.quizId ? { ...quiz, exitedAt: action.payload.exitedAt } : quiz),\n        quizStarted: null,\n      }\n\n\n    case 'LOAD_FROM_STORAGE':\n      return {\n        ...state,\n        progress: action.payload.progress,\n        enrolledCourses: action.payload.enrolledCourses,\n        completedCourses: action.payload.completedCourses,\n      }\n\n    case 'RESET_STATE':\n      return initialState\n\n    default:\n      return state\n  }\n}\n"],"names":["initialState","users","courses","topics","lessons","progress","quizzes","certificates","enrolledCourses","completedCourses","quizStarted","isLoading","error","lmsReducer","state","action","type","payload","filter","courseId","map","quiz","id","quizId","startedAt","completedAt","score","exitedAt"],"mappings":"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"}
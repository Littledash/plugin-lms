{"version":3,"sources":["../../src/access/isAdminOrStudent.ts"],"sourcesContent":["import type { Access, FieldAccess } from 'payload'\n\nimport type { User } from 'payload'\n\nimport { checkRole } from './checkRole.js'\n\n/**\n * Access control that allows users with admin role or student role\n * @returns True if the user is an admin or student, false otherwise\n */\nexport const isAdminOrStudent: Access = ({ req: { user } }) => {\n  if (user && checkRole(['admin', 'student'], user)) {\n    return true\n  }\n\n  // if (user && checkRole(['student'], user)) {\n  //   return {\n  //     students: {\n  //       contains: user.id,\n  //     },\n  //   }\n  // }\n\n  return false\n}\n\nexport const isAdminOrStudentFieldLevel: FieldAccess<\n  { id: string; students?: (string | number)[] },\n  User\n> = ({ req: { user }, doc }) => {\n  if (!user) return false\n  if (checkRole(['admin', 'student'], user)) return true\n  return doc?.students?.includes(String(user.id)) ?? false\n}\n"],"names":["checkRole","isAdminOrStudent","req","user","isAdminOrStudentFieldLevel","doc","students","includes","String","id"],"mappings":"AAIA,SAASA,SAAS,QAAQ,iBAAgB;AAE1C;;;CAGC,GACD,OAAO,MAAMC,mBAA2B,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAE,EAAE;IACxD,IAAIA,QAAQH,UAAU;QAAC;QAAS;KAAU,EAAEG,OAAO;QACjD,OAAO;IACT;IAEA,8CAA8C;IAC9C,aAAa;IACb,kBAAkB;IAClB,2BAA2B;IAC3B,SAAS;IACT,MAAM;IACN,IAAI;IAEJ,OAAO;AACT,EAAC;AAED,OAAO,MAAMC,6BAGT,CAAC,EAAEF,KAAK,EAAEC,IAAI,EAAE,EAAEE,GAAG,EAAE;IACzB,IAAI,CAACF,MAAM,OAAO;IAClB,IAAIH,UAAU;QAAC;QAAS;KAAU,EAAEG,OAAO,OAAO;IAClD,OAAOE,KAAKC,UAAUC,SAASC,OAAOL,KAAKM,EAAE,MAAM;AACrD,EAAC"}
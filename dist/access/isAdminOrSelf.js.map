{"version":3,"sources":["../../src/access/isAdminOrSelf.ts"],"sourcesContent":["import type { Access, FieldAccess } from 'payload'\nimport type { User } from 'payload'\nimport { checkRole } from './checkRole.js'\n\n/**\n * Access control that allows users with admin role or self\n * @returns True if the user is an admin or self, false otherwise\n */\nexport const isAdminOrSelf: Access = ({ req: { user } }) => {\n  // Need to be logged in\n  if (user) {\n    // If user has role of 'admin'\n    if (checkRole(['admin'], user)) {\n      return true\n    }\n\n    // If any other type of user, only provide access to themselves\n    return {\n      id: {\n        equals: user.id,\n      },\n    }\n  }\n\n  // Reject everyone else\n  return false\n}\n\nexport const isAdminOrSelfFieldLevel: FieldAccess<{ id: string }, User> = ({\n  req: { user },\n  id,\n}) => {\n  // Return true or false based on if the user has an admin role\n  if (checkRole(['admin'], user)) return true\n  if (user?.id === id) return true\n  return false\n}\n"],"names":["checkRole","isAdminOrSelf","req","user","id","equals","isAdminOrSelfFieldLevel"],"mappings":"AAEA,SAASA,SAAS,QAAQ,iBAAgB;AAE1C;;;CAGC,GACD,OAAO,MAAMC,gBAAwB,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAE,EAAE;IACrD,uBAAuB;IACvB,IAAIA,MAAM;QACR,8BAA8B;QAC9B,IAAIH,UAAU;YAAC;SAAQ,EAAEG,OAAO;YAC9B,OAAO;QACT;QAEA,+DAA+D;QAC/D,OAAO;YACLC,IAAI;gBACFC,QAAQF,KAAKC,EAAE;YACjB;QACF;IACF;IAEA,uBAAuB;IACvB,OAAO;AACT,EAAC;AAED,OAAO,MAAME,0BAA6D,CAAC,EACzEJ,KAAK,EAAEC,IAAI,EAAE,EACbC,EAAE,EACH;IACC,8DAA8D;IAC9D,IAAIJ,UAAU;QAAC;KAAQ,EAAEG,OAAO,OAAO;IACvC,IAAIA,MAAMC,OAAOA,IAAI,OAAO;IAC5B,OAAO;AACT,EAAC"}
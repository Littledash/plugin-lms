{"version":3,"sources":["../../src/access/isAdminOrAuthorOrStudent.ts"],"sourcesContent":["import type { Access, FieldAccess } from 'payload'\n\nimport type { User } from 'payload'\n\nimport { checkRole } from './checkRole.js'\n\n/**\n * Access control that allows users with admin role or student role\n * @returns True if the user is an admin or student, false otherwise\n */\nexport const isAdminOrAuthorOrStudent: Access = ({ req: { user } }) => {\n  if (user && checkRole(['admin', 'author', 'student'], user)) {\n    return true\n  }\n\n  return false\n}\n\nexport const isAdminOrAuthorOrStudentFieldLevel: FieldAccess<\n  { id: string; students?: (string | number)[] },\n  User\n> = ({ req: { user }, doc }) => {\n  if (!user) return false\n  if (checkRole(['admin', 'author'], user)) return true\n  return doc?.students?.includes(String(user.id)) ?? false\n}\n"],"names":["checkRole","isAdminOrAuthorOrStudent","req","user","isAdminOrAuthorOrStudentFieldLevel","doc","students","includes","String","id"],"mappings":"AAIA,SAASA,SAAS,QAAQ,iBAAgB;AAE1C;;;CAGC,GACD,OAAO,MAAMC,2BAAmC,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAE,EAAE;IAChE,IAAIA,QAAQH,UAAU;QAAC;QAAS;QAAU;KAAU,EAAEG,OAAO;QAC3D,OAAO;IACT;IAEA,OAAO;AACT,EAAC;AAED,OAAO,MAAMC,qCAGT,CAAC,EAAEF,KAAK,EAAEC,IAAI,EAAE,EAAEE,GAAG,EAAE;IACzB,IAAI,CAACF,MAAM,OAAO;IAClB,IAAIH,UAAU;QAAC;QAAS;KAAS,EAAEG,OAAO,OAAO;IACjD,OAAOE,KAAKC,UAAUC,SAASC,OAAOL,KAAKM,EAAE,MAAM;AACrD,EAAC"}
{"version":3,"sources":["../../src/access/isAdminOrGroupLeader.ts"],"sourcesContent":["import type { Access, TypedCollection } from 'payload'\nimport { checkRole } from './checkRole.js'\n\nexport const isAdminOrGroupLeader: Access = async ({ req, id }) => {\n  const { user } = req\n\n  if (!user) {\n    return false\n  }\n\n  if (checkRole(['admin'], user)) {\n    return true\n  }\n\n  if (id) {\n    const group = await req.payload.findByID({\n      collection: 'groups',\n      id,\n      depth: 1,\n    })\n\n    if (group && group.leaders) {\n      const leaderIds = group.leaders.map((leader: TypedCollection['users']) => typeof leader === 'object' ? leader.id : leader)\n      if (leaderIds.includes(user.id)) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n"],"names":["checkRole","isAdminOrGroupLeader","req","id","user","group","payload","findByID","collection","depth","leaders","leaderIds","map","leader","includes"],"mappings":"AACA,SAASA,SAAS,QAAQ,iBAAgB;AAE1C,OAAO,MAAMC,uBAA+B,OAAO,EAAEC,GAAG,EAAEC,EAAE,EAAE;IAC5D,MAAM,EAAEC,IAAI,EAAE,GAAGF;IAEjB,IAAI,CAACE,MAAM;QACT,OAAO;IACT;IAEA,IAAIJ,UAAU;QAAC;KAAQ,EAAEI,OAAO;QAC9B,OAAO;IACT;IAEA,IAAID,IAAI;QACN,MAAME,QAAQ,MAAMH,IAAII,OAAO,CAACC,QAAQ,CAAC;YACvCC,YAAY;YACZL;YACAM,OAAO;QACT;QAEA,IAAIJ,SAASA,MAAMK,OAAO,EAAE;YAC1B,MAAMC,YAAYN,MAAMK,OAAO,CAACE,GAAG,CAAC,CAACC,SAAqC,OAAOA,WAAW,WAAWA,OAAOV,EAAE,GAAGU;YACnH,IAAIF,UAAUG,QAAQ,CAACV,KAAKD,EAAE,GAAG;gBAC/B,OAAO;YACT;QACF;IACF;IAEA,OAAO;AACT,EAAC"}
{"version":3,"sources":["../../src/access/isAdminOrAuthorOrEnrolledInCourse.ts"],"sourcesContent":["import type { Access, FieldAccess } from 'payload'\n\nimport { checkRole } from './checkRole.js'\n\n/**\n * Access control that allows users with admin role or author role or enrolled in course\n * @returns True if the user is an admin or author or enrolled in course, false otherwise\n */\nexport const isAdminOrAuthorOrEnrolledInCourse: Access = async ({\n  req: { user, payload },\n  data,\n}) => {\n  if (user && checkRole(['admin', 'author'], user)) {\n    return true\n  }\n\n  if (user && checkRole(['student'], user) && data?.course) {\n    const courseId = typeof data.course === 'string' ? data.course : data.course.id\n\n    const courses = await payload.find({\n      collection: 'courses',\n      where: {\n        id: {\n          equals: courseId,\n        },\n        students: {\n          contains: user.id,\n        },\n      },\n    })\n\n    return courses.docs.length > 0\n  }\n  return false\n}\n\nexport const isAdminOrAuthorOrEnrolledInCourseFieldLevel: FieldAccess = async ({\n  req: { user, payload },\n  doc,\n}) => {\n  if (!user) return false\n\n  if (checkRole(['admin', 'author'], user)) return true\n\n  // Check if user is enrolled in the course. Not sure if this is the best way to do this. Or if it works with the current setup.\n  const courses = await payload.find({\n    collection: 'courses',\n    where: {\n      id: {\n        equals: doc?.course,\n      },\n      students: {\n        contains: user.id,\n      },\n    },\n  })\n\n  const isEnrolled = courses.docs.length > 0\n\n  return isEnrolled\n}\n"],"names":["checkRole","isAdminOrAuthorOrEnrolledInCourse","req","user","payload","data","course","courseId","id","courses","find","collection","where","equals","students","contains","docs","length","isAdminOrAuthorOrEnrolledInCourseFieldLevel","doc","isEnrolled"],"mappings":"AAEA,SAASA,SAAS,QAAQ,iBAAgB;AAE1C;;;CAGC,GACD,OAAO,MAAMC,oCAA4C,OAAO,EAC9DC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAE,EACtBC,IAAI,EACL;IACC,IAAIF,QAAQH,UAAU;QAAC;QAAS;KAAS,EAAEG,OAAO;QAChD,OAAO;IACT;IAEA,IAAIA,QAAQH,UAAU;QAAC;KAAU,EAAEG,SAASE,MAAMC,QAAQ;QACxD,MAAMC,WAAW,OAAOF,KAAKC,MAAM,KAAK,WAAWD,KAAKC,MAAM,GAAGD,KAAKC,MAAM,CAACE,EAAE;QAE/E,MAAMC,UAAU,MAAML,QAAQM,IAAI,CAAC;YACjCC,YAAY;YACZC,OAAO;gBACLJ,IAAI;oBACFK,QAAQN;gBACV;gBACAO,UAAU;oBACRC,UAAUZ,KAAKK,EAAE;gBACnB;YACF;QACF;QAEA,OAAOC,QAAQO,IAAI,CAACC,MAAM,GAAG;IAC/B;IACA,OAAO;AACT,EAAC;AAED,OAAO,MAAMC,8CAA2D,OAAO,EAC7EhB,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAE,EACtBe,GAAG,EACJ;IACC,IAAI,CAAChB,MAAM,OAAO;IAElB,IAAIH,UAAU;QAAC;QAAS;KAAS,EAAEG,OAAO,OAAO;IAEjD,+HAA+H;IAC/H,MAAMM,UAAU,MAAML,QAAQM,IAAI,CAAC;QACjCC,YAAY;QACZC,OAAO;YACLJ,IAAI;gBACFK,QAAQM,KAAKb;YACf;YACAQ,UAAU;gBACRC,UAAUZ,KAAKK,EAAE;YACnB;QACF;IACF;IAEA,MAAMY,aAAaX,QAAQO,IAAI,CAACC,MAAM,GAAG;IAEzC,OAAOG;AACT,EAAC"}
{"version":3,"sources":["../../src/access/isAdmin.ts"],"sourcesContent":["import type { AccessArgs, FieldAccess } from 'payload'\nimport type { User } from 'payload'\nimport { checkRole } from './checkRole.js'\n\ntype isAdminType = (args: AccessArgs<User>) => boolean\n\n/**\n * Access control that only allows users with admin role\n * @returns True if the user has admin role, false otherwise\n */\nexport const isAdmin: isAdminType = ({ req: { user } }) => {\n  // Return true or false based on if the user has an admin role\n  return Boolean(checkRole(['admin'], user))\n}\n\nexport const isAdminFieldLevel: FieldAccess<{ id: string }, User> = ({ req: { user } }) => {\n  // Return true or false based on if the user has an admin role\n  return Boolean(checkRole(['admin'], user))\n}\n"],"names":["checkRole","isAdmin","req","user","Boolean","isAdminFieldLevel"],"mappings":"AAEA,SAASA,SAAS,QAAQ,iBAAgB;AAI1C;;;CAGC,GACD,OAAO,MAAMC,UAAuB,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAE,EAAE;IACpD,8DAA8D;IAC9D,OAAOC,QAAQJ,UAAU;QAAC;KAAQ,EAAEG;AACtC,EAAC;AAED,OAAO,MAAME,oBAAuD,CAAC,EAAEH,KAAK,EAAEC,IAAI,EAAE,EAAE;IACpF,8DAA8D;IAC9D,OAAOC,QAAQJ,UAAU;QAAC;KAAQ,EAAEG;AACtC,EAAC"}
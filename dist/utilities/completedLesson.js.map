{"version":3,"sources":["../../src/utilities/completedLesson.ts"],"sourcesContent":["import { CourseProgress, Progress, Lesson, Quiz } from '../providers/types.js'\n\n/**\n * @fileoverview Utility functions for checking lesson completion status\n * \n * This module provides functions to check if a lesson is completed, including\n * both lesson completion and quiz completion requirements.\n * \n * @example\n * ```typescript\n * import { completedLesson, lessonHasQuizzes, allQuizzesCompleted } from './completedLesson'\n * \n * // Check lesson completion including quiz completion\n * const status = completedLesson(progress, courseId, lessonObject)\n * console.log(status) // { isCompleted: boolean, hasQuizzes: boolean, allQuizzesCompleted: boolean, lessonCompleted: boolean }\n * \n * // Check if lesson has quizzes\n * const hasQuizzes = lessonHasQuizzes(lessonObject)\n * \n * // Check if all quizzes for a lesson are completed\n * const allQuizzesDone = allQuizzesCompleted(courseProgress, lessonObject)\n * ```\n */\n\n/**\n * Checks if a lesson has any quizzes associated with it\n * @param lesson - The lesson object to check\n * @returns boolean indicating if the lesson has quizzes\n */\nexport const lessonHasQuizzes = (lesson: Lesson): boolean => {\n  return Boolean(lesson.quizzes && Array.isArray(lesson.quizzes) && lesson.quizzes.length > 0)\n}\n\n/**\n * Checks if all quizzes for a lesson are completed\n * @param courseProgress - The course progress object\n * @param lesson - The lesson object to check\n * @returns boolean indicating if all quizzes are completed\n */\nexport const allQuizzesCompleted = (courseProgress: CourseProgress, lesson: Lesson): boolean => {\n  if (!lessonHasQuizzes(lesson)) {\n    return true // No quizzes means \"all quizzes completed\"\n  }\n\n  const lessonQuizIds = lesson.quizzes.map((quiz: Quiz | string) => \n    typeof quiz === 'object' ? quiz.id : quiz\n  )\n\n  return lessonQuizIds.every((quizId: string) => \n    courseProgress.completedQuizzes.some((cq) => \n      typeof cq.quiz === 'object' ? cq.quiz.id === quizId : cq.quiz === quizId\n    )\n  )\n}\n\n/**\n * Checks if a lesson is completed, including both lesson completion and quiz completion\n * @param progress - The user's progress across all courses\n * @param courseId - The ID of the course\n * @param lesson - The lesson object to check\n * @returns object with completion status details\n */\nexport const completedLesson = (\n  progress: Progress,\n  courseId: string,\n  lesson: Lesson,\n) => {\n  const courseProgress = progress.find((p: CourseProgress) => \n    (typeof p.course === 'object' ? p.course.id : p.course) === courseId\n  )\n  \n  if (!courseProgress) {\n    return {\n      isCompleted: false,\n      hasQuizzes: false,\n      allQuizzesCompleted: false,\n      lessonCompleted: false\n    }\n  }\n  \n  const lessonCompleted = Boolean(\n    courseProgress.completedLessons.find((l) => \n      typeof l.lesson === 'object' ? l.lesson.id : l.lesson === lesson.id\n    )\n  )\n\n\n  const hasQuizzes = lessonHasQuizzes(lesson)\n  const allQuizzesCompletedForLesson = allQuizzesCompleted(courseProgress, lesson)\n  \n  // A lesson is fully completed if:\n  // 1. The lesson itself is marked as completed, AND\n  // 2. Either there are no quizzes, OR all quizzes are completed\n  const isCompleted = lessonCompleted && (!hasQuizzes || allQuizzesCompletedForLesson)\n  \n  return {\n    isCompleted,\n    hasQuizzes,\n    allQuizzesCompleted: allQuizzesCompletedForLesson,\n    lessonCompleted\n  }\n}"],"names":["lessonHasQuizzes","lesson","Boolean","quizzes","Array","isArray","length","allQuizzesCompleted","courseProgress","lessonQuizIds","map","quiz","id","every","quizId","completedQuizzes","some","cq","completedLesson","progress","courseId","find","p","course","isCompleted","hasQuizzes","lessonCompleted","completedLessons","l","allQuizzesCompletedForLesson"],"mappings":"AAEA;;;;;;;;;;;;;;;;;;;;CAoBC,GAED;;;;CAIC,GACD,OAAO,MAAMA,mBAAmB,CAACC;IAC/B,OAAOC,QAAQD,OAAOE,OAAO,IAAIC,MAAMC,OAAO,CAACJ,OAAOE,OAAO,KAAKF,OAAOE,OAAO,CAACG,MAAM,GAAG;AAC5F,EAAC;AAED;;;;;CAKC,GACD,OAAO,MAAMC,sBAAsB,CAACC,gBAAgCP;IAClE,IAAI,CAACD,iBAAiBC,SAAS;QAC7B,OAAO,KAAK,2CAA2C;;IACzD;IAEA,MAAMQ,gBAAgBR,OAAOE,OAAO,CAACO,GAAG,CAAC,CAACC,OACxC,OAAOA,SAAS,WAAWA,KAAKC,EAAE,GAAGD;IAGvC,OAAOF,cAAcI,KAAK,CAAC,CAACC,SAC1BN,eAAeO,gBAAgB,CAACC,IAAI,CAAC,CAACC,KACpC,OAAOA,GAAGN,IAAI,KAAK,WAAWM,GAAGN,IAAI,CAACC,EAAE,KAAKE,SAASG,GAAGN,IAAI,KAAKG;AAGxE,EAAC;AAED;;;;;;CAMC,GACD,OAAO,MAAMI,kBAAkB,CAC7BC,UACAC,UACAnB;IAEA,MAAMO,iBAAiBW,SAASE,IAAI,CAAC,CAACC,IACpC,AAAC,CAAA,OAAOA,EAAEC,MAAM,KAAK,WAAWD,EAAEC,MAAM,CAACX,EAAE,GAAGU,EAAEC,MAAM,AAAD,MAAOH;IAG9D,IAAI,CAACZ,gBAAgB;QACnB,OAAO;YACLgB,aAAa;YACbC,YAAY;YACZlB,qBAAqB;YACrBmB,iBAAiB;QACnB;IACF;IAEA,MAAMA,kBAAkBxB,QACtBM,eAAemB,gBAAgB,CAACN,IAAI,CAAC,CAACO,IACpC,OAAOA,EAAE3B,MAAM,KAAK,WAAW2B,EAAE3B,MAAM,CAACW,EAAE,GAAGgB,EAAE3B,MAAM,KAAKA,OAAOW,EAAE;IAKvE,MAAMa,aAAazB,iBAAiBC;IACpC,MAAM4B,+BAA+BtB,oBAAoBC,gBAAgBP;IAEzE,kCAAkC;IAClC,mDAAmD;IACnD,+DAA+D;IAC/D,MAAMuB,cAAcE,mBAAoB,CAAA,CAACD,cAAcI,4BAA2B;IAElF,OAAO;QACLL;QACAC;QACAlB,qBAAqBsB;QACrBH;IACF;AACF,EAAC"}
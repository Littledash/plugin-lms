{"version":3,"sources":["../../../src/ui/PriceInput/FormattedInput.tsx"],"sourcesContent":["'use client'\n\nimport type { StaticLabel } from 'payload'\n\nimport { FieldLabel } from '@payloadcms/ui'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport type { Currency } from '../../types.js'\n\nimport { AUD } from '../../currencies/index.js'\nimport { convertFromBaseValue, convertToBaseValue } from './utilities.js'\n\ninterface Props {\n  currency: string\n  disabled?: boolean\n  error?: string\n  id?: string\n  label?: StaticLabel\n  onChange: (value: number) => void\n  placeholder?: string\n  supportedCurrencies: Currency[]\n  value: number\n}\n\nconst baseClass = 'formattedPrice'\n\nexport const FormattedInput: React.FC<Props> = ({\n  id,\n  currency: currencyFromProps,\n  disabled = false,\n  label,\n  onChange: onChangeFromProps,\n  placeholder = '0.00',\n  supportedCurrencies,\n  value,\n}) => {\n  const [displayValue, setDisplayValue] = useState<string>('')\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const isFirstRender = useRef(true)\n  const debounceTimer = useRef<NodeJS.Timeout | null>(null)\n\n  const currency = useMemo<Currency>(() => {\n    if (currencyFromProps && supportedCurrencies) {\n      const foundCurrency = supportedCurrencies.find(\n        (supportedCurrency) => supportedCurrency.code === currencyFromProps,\n      )\n\n      return foundCurrency ?? AUD\n    }\n\n    return AUD\n  }, [currencyFromProps, supportedCurrencies])\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false\n      setDisplayValue(convertFromBaseValue({ baseValue: value, currency }))\n    }\n  }, [currency, value, currencyFromProps])\n\n  const updateValue = useCallback(\n    (inputValue: string) => {\n      const baseValue = convertToBaseValue({ currency, displayValue: inputValue })\n      onChangeFromProps(baseValue)\n    },\n    [currency, onChangeFromProps],\n  )\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value\n\n    if (!/^\\d*(?:\\.\\d*)?$/.test(inputValue) && inputValue !== '') {\n      return\n    }\n\n    setDisplayValue(inputValue)\n\n    // Clear any existing timer\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current)\n    }\n\n    // Only update the base value after a delay to avoid formatting while typing\n    debounceTimer.current = setTimeout(() => {\n      updateValue(inputValue)\n    }, 500)\n  }\n\n  const handleInputBlur = () => {\n    if (displayValue === '') {\n      return\n    }\n\n    // Clear any pending debounce\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current)\n      debounceTimer.current = null\n    }\n\n    const baseValue = convertToBaseValue({ currency, displayValue })\n    const formattedValue = convertFromBaseValue({ baseValue, currency })\n\n    if (value != baseValue) {\n      onChangeFromProps(baseValue)\n    }\n    setDisplayValue(formattedValue)\n  }\n\n  return (\n    <div className={`field-type number ${baseClass}`}>\n      {label && <FieldLabel htmlFor={id} label={label} />}\n\n      <div className={`${baseClass}Container`}>\n        <div className={`${baseClass}CurrencySymbol`}>\n          <span>{currency.symbol}</span>\n        </div>\n\n        <input\n          className={`${baseClass}Input`}\n          disabled={disabled}\n          id={id}\n          onBlur={handleInputBlur}\n          onChange={handleInputChange}\n          placeholder={placeholder}\n          ref={inputRef}\n          type=\"text\"\n          value={displayValue}\n        />\n      </div>\n    </div>\n  )\n}\n"],"names":["FieldLabel","useCallback","useEffect","useMemo","useRef","useState","AUD","convertFromBaseValue","convertToBaseValue","baseClass","FormattedInput","id","currency","currencyFromProps","disabled","label","onChange","onChangeFromProps","placeholder","supportedCurrencies","value","displayValue","setDisplayValue","inputRef","isFirstRender","debounceTimer","foundCurrency","find","supportedCurrency","code","current","baseValue","updateValue","inputValue","handleInputChange","e","target","test","clearTimeout","setTimeout","handleInputBlur","formattedValue","div","className","htmlFor","span","symbol","input","onBlur","ref","type"],"mappings":"AAAA;;AAIA,SAASA,UAAU,QAAQ,iBAAgB;AAC3C,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,QAAO;AAIzE,SAASC,GAAG,QAAQ,4BAA2B;AAC/C,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,iBAAgB;AAczE,MAAMC,YAAY;AAElB,OAAO,MAAMC,iBAAkC,CAAC,EAC9CC,EAAE,EACFC,UAAUC,iBAAiB,EAC3BC,WAAW,KAAK,EAChBC,KAAK,EACLC,UAAUC,iBAAiB,EAC3BC,cAAc,MAAM,EACpBC,mBAAmB,EACnBC,KAAK,EACN;IACC,MAAM,CAACC,cAAcC,gBAAgB,GAAGjB,SAAiB;IAEzD,MAAMkB,WAAWnB,OAAyB;IAC1C,MAAMoB,gBAAgBpB,OAAO;IAC7B,MAAMqB,gBAAgBrB,OAA8B;IAEpD,MAAMQ,WAAWT,QAAkB;QACjC,IAAIU,qBAAqBM,qBAAqB;YAC5C,MAAMO,gBAAgBP,oBAAoBQ,IAAI,CAC5C,CAACC,oBAAsBA,kBAAkBC,IAAI,KAAKhB;YAGpD,OAAOa,iBAAiBpB;QAC1B;QAEA,OAAOA;IACT,GAAG;QAACO;QAAmBM;KAAoB;IAE3CjB,UAAU;QACR,IAAIsB,cAAcM,OAAO,EAAE;YACzBN,cAAcM,OAAO,GAAG;YACxBR,gBAAgBf,qBAAqB;gBAAEwB,WAAWX;gBAAOR;YAAS;QACpE;IACF,GAAG;QAACA;QAAUQ;QAAOP;KAAkB;IAEvC,MAAMmB,cAAc/B,YAClB,CAACgC;QACC,MAAMF,YAAYvB,mBAAmB;YAAEI;YAAUS,cAAcY;QAAW;QAC1EhB,kBAAkBc;IACpB,GACA;QAACnB;QAAUK;KAAkB;IAG/B,MAAMiB,oBAAoB,CAACC;QACzB,MAAMF,aAAaE,EAAEC,MAAM,CAAChB,KAAK;QAEjC,IAAI,CAAC,kBAAkBiB,IAAI,CAACJ,eAAeA,eAAe,IAAI;YAC5D;QACF;QAEAX,gBAAgBW;QAEhB,2BAA2B;QAC3B,IAAIR,cAAcK,OAAO,EAAE;YACzBQ,aAAab,cAAcK,OAAO;QACpC;QAEA,4EAA4E;QAC5EL,cAAcK,OAAO,GAAGS,WAAW;YACjCP,YAAYC;QACd,GAAG;IACL;IAEA,MAAMO,kBAAkB;QACtB,IAAInB,iBAAiB,IAAI;YACvB;QACF;QAEA,6BAA6B;QAC7B,IAAII,cAAcK,OAAO,EAAE;YACzBQ,aAAab,cAAcK,OAAO;YAClCL,cAAcK,OAAO,GAAG;QAC1B;QAEA,MAAMC,YAAYvB,mBAAmB;YAAEI;YAAUS;QAAa;QAC9D,MAAMoB,iBAAiBlC,qBAAqB;YAAEwB;YAAWnB;QAAS;QAElE,IAAIQ,SAASW,WAAW;YACtBd,kBAAkBc;QACpB;QACAT,gBAAgBmB;IAClB;IAEA,qBACE,MAACC;QAAIC,WAAW,CAAC,kBAAkB,EAAElC,WAAW;;YAC7CM,uBAAS,KAACf;gBAAW4C,SAASjC;gBAAII,OAAOA;;0BAE1C,MAAC2B;gBAAIC,WAAW,GAAGlC,UAAU,SAAS,CAAC;;kCACrC,KAACiC;wBAAIC,WAAW,GAAGlC,UAAU,cAAc,CAAC;kCAC1C,cAAA,KAACoC;sCAAMjC,SAASkC,MAAM;;;kCAGxB,KAACC;wBACCJ,WAAW,GAAGlC,UAAU,KAAK,CAAC;wBAC9BK,UAAUA;wBACVH,IAAIA;wBACJqC,QAAQR;wBACRxB,UAAUkB;wBACVhB,aAAaA;wBACb+B,KAAK1B;wBACL2B,MAAK;wBACL9B,OAAOC;;;;;;AAKjB,EAAC"}
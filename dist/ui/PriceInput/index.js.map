{"version":3,"sources":["../../../src/ui/PriceInput/index.tsx"],"sourcesContent":["'use client'\nimport type { NumberFieldClientProps } from 'payload'\n\nimport { useField, useFormFields } from '@payloadcms/ui'\n\nimport './index.scss'\n\nimport type { CurrenciesConfig } from '../../types.js'\n\nimport { FormattedInput } from './FormattedInput.js'\n\ntype Props = {\n  currenciesConfig: CurrenciesConfig\n  path: string\n} & NumberFieldClientProps\n\nexport const PriceInput: React.FC<Props> = (args) => {\n  const {\n    currenciesConfig,\n    field: { label },\n    path,\n  } = args\n\n  const { setValue, value } = useField<number>({ path })\n  const parentPath = path.split('.').slice(0, -1).join('.')\n  const currencyPath = parentPath ? `${parentPath}.currency` : 'currency'\n\n  const currency = useFormFields(([fields]) => fields[currencyPath])\n\n  return (\n    <FormattedInput\n      currency={currency?.value as string}\n      label={label}\n      onChange={(value) => setValue(value)}\n      supportedCurrencies={currenciesConfig?.supportedCurrencies}\n      value={value || 0}\n    />\n  )\n}\n"],"names":["useField","useFormFields","FormattedInput","PriceInput","args","currenciesConfig","field","label","path","setValue","value","parentPath","split","slice","join","currencyPath","currency","fields","onChange","supportedCurrencies"],"mappings":"AAAA;;AAGA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,iBAAgB;AAExD,OAAO,eAAc;AAIrB,SAASC,cAAc,QAAQ,sBAAqB;AAOpD,OAAO,MAAMC,aAA8B,CAACC;IAC1C,MAAM,EACJC,gBAAgB,EAChBC,OAAO,EAAEC,KAAK,EAAE,EAChBC,IAAI,EACL,GAAGJ;IAEJ,MAAM,EAAEK,QAAQ,EAAEC,KAAK,EAAE,GAAGV,SAAiB;QAAEQ;IAAK;IACpD,MAAMG,aAAaH,KAAKI,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;IACrD,MAAMC,eAAeJ,aAAa,GAAGA,WAAW,SAAS,CAAC,GAAG;IAE7D,MAAMK,WAAWf,cAAc,CAAC,CAACgB,OAAO,GAAKA,MAAM,CAACF,aAAa;IAEjE,qBACE,KAACb;QACCc,UAAUA,UAAUN;QACpBH,OAAOA;QACPW,UAAU,CAACR,QAAUD,SAASC;QAC9BS,qBAAqBd,kBAAkBc;QACvCT,OAAOA,SAAS;;AAGtB,EAAC"}